<html lang='en'>

<head>
  <!-- Google Fonts -->
  <link rel='preconnect' href='https://fonts.googleapis.com' />
  <link
    href='https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&family=Tajawal:wght@300;400;500&display=swap'
    rel='stylesheet' />
  <meta name="test-data" src="./data/invoice-with-details.json" />


<style>
  @page {
    size: 21cm 29.7cm;
  }

  /* Start Global Rules */
  /*body {
    background-image: url("https://madarv2devstorage.blob.core.windows.net/madar/images/1688896309657-Portrait%20BG.png");
    background-size: 100% auto;
    background-repeat: repeat;
  }*/

  .page {
    position: relative;
    overflow: hidden;
    height: 297mm;
    width: 210mm;
    page-break-before: always;
    background-image: url("https://madarv2devstorage.blob.core.windows.net/madar/images/1688896309657-Portrait%20BG.png");
    background-size: 100% auto;
    background-repeat: repeat;
  }

  .summary-page {
    position: relative;
    overflow: hidden;
    height: 297mm;
    width: 210mm;
    margin-top: '3mm';
    background-image: url("https://madarv2devstorage.blob.core.windows.net/madar/images/1689679204006-Landscape%20BG.png");
    background-size: 100% auto;
    background-repeat: repeat;
  }

  .content {
    height: 210mm;
    padding: 25mm 10mm 0mm;
  }

  .flex {
    display: flex;
    flex-direction: row;
  }

  .justify-space-between {
    justify-content: space-between;
  }

  table,
  th,
  td {
    border: 1px solid #EAEAEA;
    border-collapse: collapse;
  }

  td.text-center,
  tr.text-center {
    text-align: center;
  }

  .invoice-date-table,
  .sold-to-seller-table {
    margin-top: 0.75rem;
  }

  .text-limit-width {
    width: 300px;
  }

  .terms-table {
    margin: 16px 0px;
  }

  th {
    font-size: 14px;
    font-weight: normal;
  }

  .comments-table {
    margin: 16px 0px 0px;
  }

  p {
    margin: 0px;
  }

  tr.no-border {
    border: 0;
  }

  tr.no-border td {
    border-left: 1px solid #EAEAEA;
    border-right: 1px solid #EAEAEA;
    border-top: 0;
    border-bottom: 0;
  }

  .shipments-table th {
    height: 14mm;
    width: auto;
  }

  .shipments-table td {
    height: 14mm;
    white-space: nowrap;
  }

  .shipments-table td div {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .w-100 {
    width: 100%;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  td {
    padding: 0.1rem 0.5rem;
  }

  .tables-list__header .start {
    width: 100%;
    padding-left: 12px;

  }

  .tables-list__header .start p {
    color: #414141;
    font: normal normal 600 22px/33px Poppins;
    margin: 0;
  }

  .tables-list__header .middle {
    color: #707070;
    text-align: center;
    font: normal normal 600 16px/25px Poppins;
    margin: 0.75rem 0 0;
    width: 100%;
  }

  .tables-list__header .end {
    width: 100%;
    text-align: right;
  }

  .tables-list__header .end img {
    height: 80px;
    width: auto;
    object-fit: contain;
  }

  .invoice-date-table td {
    width: 50%;
    padding: 0;
    background-color: #FAFAFA;
    padding: 0.5rem;
  }

  .invoice-date-table .label {
    margin: 0;
    font: normal normal normal 14px/21px Poppins;
    color: #707070;
  }

  .invoice-date-table .value {
    margin: 0;
    font: normal normal 600 12px/18px Poppins;
    color: #000000;
  }

  .sold-to-seller-table p {
    margin: 0;
    font: normal normal 600 16px/25px Poppins;
    color: white;
  }

  .from-to-table,
  .total-amount-table {
    margin-top: 0.4rem;
    border: 0;
  }

  .from-to-table p {
    font: normal normal normal 14px/21px Poppins;
  }

  .order-number-table,
  .shipments-table {
    border-top: 1px solid #f16344;
    padding-top: 0.2rem;
  }

  .order-number-table th {
    text-align: start;
    padding: 0.5rem;
  }

  .shipments-table {
    margin-top: 0.5rem;
  }

  .order-number-table td,
  .shipments-table td,
  .summary-table td {
    padding: 0.5rem;
    font: normal normal normal 12px/18px Poppins;
    color: #414141;
  }

  .order-number-table th,
  .shipments-table th,
  .summary-table th {
    background-color: #E6E6E6;
    font: normal normal normal 12px/18px Poppins;
    color: #000000;
  }

  .shipments-table th,
  .shipments-table td {
    text-align: center;
  }

  .shipments-table tr:nth-child(even),
  .summary-table tr:nth-child(even) {
    background-color: #F8F8F8;
  }

  .total-amount-table p {
    font: normal normal 600 14px/21px Poppins;
    color: #414141;
  }

  .comments-table td,
  .comments-table tr {
    border: 0;
  }

  .comments-table .label {
    color: #707070;
    font: normal normal normal 14px/21px Poppins;
  }

  .comments-table .value {
    color: #000000;
    font: normal normal 600 12px/18px Poppins;
  }

  .summary-table th {
    height: 10mm;
    text-align: left;
    width: auto;
  }

  .summary-table td {
    height: 10mm;
    text-align: left;
    white-space: nowrap;
  }

  .summary-table table {
    border-collapse: collapse;
    transform: rotate(270deg);
    width: 260mm;
    max-height: 155mm;
    position: absolute;
  }
</style>

</head>
<body>
  <div class="tables-list">
    <div class="content">
      <section class="tables-list__header"
        style="width: 100%; display: flex; justify-content: space-between; align-items: flex-start;">
        <div class="start">
          <p>Tax Invoice</p>
          <p>فاتورة ضريبية</p>
        </div>
        <div class="middle">
          <p>MSI-{{data.Year}}-{{data.invoiceNo}}</p>
          <p>{{data.status}}</p>
        </div>
        <div class='end'>
          <img alt="QR code" src='https://www.pngmart.com/files/10/Qr-Code-Transparent-PNG.png' />
        </div>
      </section>

      <table class="invoice-date-table">
        <tr>
          <td>
            <div style="display: flex; justify-content: space-between; align-items: center;">
              <p class="label">Invoice Date / تاريخ
                الفاتورة</p>
              <p class="value">{{prettifyDate data.invoiceDate}}</p>
            </div>
          </td>
          <td>
            <div style="display: flex; justify-content: space-between; align-items: center;">
              <p class="label">Due Date / تاريخ
                الاستحقاق</p>
              <p class="value">{{data.dueDate}}</p>
            </div>
          </td>
        </tr>
      </table>

      <table class="sold-to-seller-table" style="border: 0;">
        <tr class="no-border">
          <td style="width: 49%; padding: 0; background-color: #555555; padding: 0.25rem 0.5rem;">
            <p>Sold To / العميل</p>
          </td>
          <td style="width: 2%; padding: 0; border: 0;">
          </td>
          <td style="width: 49%; padding: 0; background-color: #555555; padding: 0.25rem 0.5rem;">
            <p>Seller / البائع</p>
          </td>
        </tr>
      </table>

      <table class="from-to-table">
        <tr class="no-border">
          <td style="width: 49%; border-top: 1px solid #EAEAEA; padding-top: 0.25rem;">
            <p style="font: normal normal 600 14px/21px Poppins;">{{data.customerNameEn}}</p>
          </td>
          <td style="width: 2%; padding: 0; border: 0;" rowspan="6">
          <td style="width: 49%; border-top: 1px solid #EAEAEA; padding-top: 0.25rem;">
            <p style="font: normal normal 600 14px/21px Poppins;">{{data.Name}}</p>
          </td>
        </tr>
        <tr class="no-border">
          <td class='text-limit-width'>
            {{#if data.customerId}}
            <p>Customer code No. {{data.customerId}}</p>
            {{else}}
            <p>——</p>
            {{/if}}
          </td>
          <td class='text-limit-width'>
            <p>——</p>
          </td>
        </tr>
        <tr class="no-border">
          <td class='text-limit-width'>
            <p>{{data.customerNameAr}}</p>
          </td>
          <td class='text-limit-width'>
            <p>{{data.Address}}</p>
          </td>
        </tr>
        <tr class="no-border">
          <td class='text-limit-width'>
            <p>{{data.customerAddress}}</p>
          </td>
          <td class='text-limit-width'>
            <p>{{data.City}}</p>
          </td>
        </tr>
        <tr class="no-border">
          <td class='text-limit-width'>
            <p>——</p>
          </td>
          <td class='text-limit-width'>
            <p>{{data.Country}}</p>
          </td>
        </tr>
        <tr class="no-border">
          <td class='text-limit-width' style="border-bottom: 1px solid #EAEAEA; padding-bottom: 0.25rem;">
            {{#if data.customerCrNumber}}
            <p><span style="display: inline-block;">VAT الرقم الضريبي:</span> {{data.customerCrNumber}}</p>
            {{else}}
            <p><span style="display: inline-block;">VAT الرقم الضريبي:</span> ——</p>
            {{/if}}
          </td>
          <td class='text-limit-width' style="border-bottom: 1px solid #EAEAEA; padding-bottom: 0.25rem;">
            {{#if data.Vat}}
            <p><span style="display: inline-block;">VAT الرقم الضريبي:</span> {{data.Vat}}</p>
            {{else}}
            <p><span style="display: inline-block;">VAT الرقم الضريبي:</span> ——</p>
            {{/if}}
          </td>
        </tr>
      </table>

      <div class='order-number-table' style="margin-top: 1rem;">
        <table>
          <tr>
            <th>
              <p>Internal Ref#</p>
              <p>رقم طلب المبيعات</p>
            </th>
            <th>
              <p>Shipment Period</p>
              <p>فترة الشحن</p>
            </th>

            <th>
              <p>Shipment Type</p>
              <p>نوع الشحن</p>
            </th>
            <th>
              <p>Payment Terms</p>
              <p>شروط الدفع</p>
            </th>
          </tr>
          <tr>
            <td>
              <p>{{data.invoiceNo}}</p>
            </td>
            <td>
              <p class="middle"><strong>From:</strong> {{prettifyDate data.firstDayOfShipments}} - <strong>To:</strong> {{prettifyDate data.lastDayOfShipments}}</p>
            </td>
            <td>
              <p>Local Shipments</p>
            </td>
            <td>
              <p>{{data.dueDays}}</p>
            </td>
          </tr>
        </table>
      </div>

      <div class='shipments-table'>
        <table style='width: 100%'>
          <tr>
            <th>
              <p>S.N</p>
              <p>م</p>
            </th>
            <th style="text-align: left;">
              <p>Item Description</p>
              <p>وصف السلعة</p>
            </th>
            <th>
              <p>From</p>
              <p>من</p>
            </th>
            <th>
              <p>To</p>
              <p>إلي</p>
            </th>
            <th>
              <p>Unit</p>
              <p>الوحدة</p>
            </th>
            <th>
              <p>QTY</p>
              <p>الكمية</p>
            </th>
            <th>
              <p>Price</p>
              <p>السعر</p>
            </th>
          </tr> {{#data.shipmentsSummary}}
          <tr class='text-center no-border'>
            <td>
              <p>{{add @index 1}}</p>
            </td>
            <td style="text-align: left;">
              {{#if ../data.customerType}}
              <p>Transportation services</p>
              <p>خدمات نقل</p>
              {{else}}
              <p>T-Services_OOP</p>
              <p>خدمات الشاحنات</p>
              {{/if}}
            </td>
            <td>
              <div>
                <p>{{fromCity}}</p>
              </div>
            </td>
            <td>
              <div>
                <p>{{toCity}}</p>
              </div>
            </td>
            <td>
              {{#isEqual ../data.customerType 'SERVICE'}}
              <p>Lot</p>
              {{/isEqual}}
              {{#isEqual ../data.customerType 'SAAS'}}
              <p>Each</p>
              {{/isEqual}}
            </td>
            <td>
              <div>
                <p>{{quantity}}</p>
              </div>
            </td>
            <td>
              <div>
                <p>{{price}}</p>
              </div>
            </td>
          </tr> {{/data.shipmentsSummary}}
          <tr>
            <td>{{add data.shipmentsSummary.length 1}}</td>
            <td style="text-align: left;">
              <p>Waiting Charge</p>
              <p>رسوم الانتظار</p>
            </td>
            <td>-</td>
            <td>-</td>
            <td>Day</td>
            <td>{{data.totalWaitingDays}}</td>
            <td>{{data.totalWaitingCharge}}</td>
          </tr>
          <tr>
            <td>{{add data.shipmentsSummary.length 2}}</td>
            <td style="text-align: left;">
              <p>Return Charge</p>
              <p>رسوم العودة</p>
            </td>
            <td>-</td>
            <td>-</td>
            <td>-</td>
            <td>{{data.shipmentCounts.totalReturnChargeShipmentCount}}</td>
            <td>{{data.totalReturnCharge}}</td>
          </tr>
          <tr>
            <td>{{add data.shipmentsSummary.length 3}}</td>
            <td style="text-align: left;">
              <p>Multi Destination</p>
              <p>وجهات متعددة</p>
            </td>
            <td>-</td>
            <td>-</td>
            <td>-</td>
            <td>{{data.shipmentCounts.totalMultiDestinationShipmentCount}}</td>
            <td>{{data.totalMultiDestination}}</td>
          </tr>
          <tr>
            <td>{{add data.shipmentsSummary.length 4}}</td>
            <td style="text-align: left;">
              <p>Weighting Fine</p>
              <p>غرامة الوزن</p>
            </td>
            <td>-</td>
            <td>-</td>
            <td>-</td>
            <td>{{data.shipmentCounts.totalWeightingFineShipmentCount}}</td>
            <td>{{data.totalWeightingFine}}</td>
          </tr>
          <tr>
            <td>{{add data.shipmentsSummary.length 5}}</td>
            <td style="text-align: left;">
              <p>Clearance Fees</p>
              <p>رسوم التخليص</p>
            </td>
            <td>-</td>
            <td>-</td>
            <td>-</td>
            <td>{{data.shipmentCounts.totalClearnessFeesShipmentCount}}</td>
            <td>{{data.totalClearnessFees}}</td>
          </tr>
          <tr style="background-color: #555555;">
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td>
              <p style="color: #FFFFFF; font: normal normal 600 12px/22px Poppins;">{{data.totalWithoutVAT}}</p>
            </td>
          </tr>
        </table>
      </div>

      <table class="total-amount-table">
        <tr class="no-border">
          <td style="width: 25%; border-top: 1px solid #EAEAEA; padding-top: 0.5rem; border-right: 0;">
            <p>Price &nbsp; السعر</p>
          </td>
          <td style="width: 75%; border-top: 1px solid #EAEAEA; padding-top: 0.5rem; border-left: 0;">
            <p>{{data.totalPriceShipmentsWithAddonsWithoutVat}} SAR</p>
          </td>
        </tr>
        <tr class="no-border">
          <td style="width: 25%; border-right: 0;">
            <p>Vat &nbsp; ضريبية القيمة المضافة</p>
          </td>
          <td style="width: 75%; border-left: 0;">
            <p>{{data.vatPercentage}} %</p>
          </td>
        </tr>
        <tr class="no-border">
          <td style="width: 25%; border-right: 0;">
            <p>Grand total &nbsp; الإجمالي</p>
          </td>
          <td style="width: 75%; border-left: 0;">
            <p>{{data.grandTotal}} SAR</p>
          </td>
        </tr>
        <tr class="no-border">
          <td style="width: 25%; border-right: 0;">
            <p>Amount in words</p>
          </td>
          <td style="width: 75%; border-left: 0;">
            <p>{{data.IntegerEn}} {{data.FractionEn}}</p>
          </td>
        </tr>
        <tr class="no-border">
          <td style="width: 25%;  border-bottom: 1px solid #EAEAEA; padding-bottom: 0.5rem; border-right: 0;">
            <p>المبلغ بالكلمات</p>
          </td>
          <td style="width: 75%; border-bottom: 1px solid #EAEAEA; padding-bottom: 0.5rem; border-left: 0;">
            <p>{{data.IntegerAr}} {{data.FractionAr}}</p>
          </td>
        </tr>
      </table>

      <table class="comments-table" style="border: 0;">
        <tr>
          <td style="padding-top: 0.5rem; width: 28%;">
            <p class="label">Due Date /تاريخ الاستحقاق:</p>
          </td>
          <td style="#EAEAEA; padding-top: 0.5rem;">
            <p class="value">{{data.dueDate}}</p>
          </td>
          <td style=" padding-top: 0.5rem; width: 28%;">
            <p class="label">Comments / ملاحظات:</p>
          </td>
          <td style=" padding-top: 0.5rem;">
            <p class="value">{{data.remarks}}</p>
          </td>
        </tr>
        <tr>
          <td style="width: 28%;">
            <div style="display: flex; justify-content: space-between; align-items: center;">
              <p class="label">Amount Due /المبلغ المستحق:</p>
            </div>
          </td>
          <td>
            <div style="display: flex; justify-content: space-between; align-items: center;">
              <p class="value">{{data.grandTotal}} SAR</p>
            </div>
          </td>
          <td style="width: 28%;">
            <p class="label">Bank Info:</p>
          </td>
          <td>
            <p class="value">BANK AL BILAD</p>
            <p class="value">SA1315000441130713350008</p>

          </td>
        </tr>
      </table>


      <div class='summary-table'>
        <table>
          <tr>
            <th>#</th>
            <th>Madar ID</th>
            <th>Date</th>
            <th>DN</th>
            <th>From</th>
            <th>To</th>
            <th>Truck No.</th>
            <th>Price</th>
            <th>
              <p>Wait-</p>
              <p>Days</p>
            </th>
            <th>
              <p>Waiting</p>
              <p>Charge</p>
            </th>
            <th>
              <p>Return</p>
              <p>Charge</p>
            </th>
            <th>
              <p>Multi</p>
              <p>Des.</p>
            </th>
            <th>
              <p>Weigh</p>
              <p>-fine</p>
            </th>
            <th>C-fee</th>
            <th>Total</th>
            <th>VAT</th>
            <th>G-Total</th>
          </tr> {{#data.shipments}}
          <tr>
            <td>{{add @index 1}}</td>
            <td>{{id}}</td>
            <td>{{prettifyDate shipmentCreatedAt}}</td>
            <td>{{dn}}</td>
            <td>{{from}}</td>
            <td>{{to}}</td>
            <td>{{truckNo}}</td>
            <td>{{shipmentPrice}}</td>
            <td>{{waitingDaysPerShipment}}</td>
            <td>{{waitingChargePerShipment}}</td>
            <td>{{returnChargePerShipment}}</td>
            <td>{{multiDestinationPerShipment}}</td>
            <td>{{weightingFinePerShipment}}</td>
            <td>{{clearnessFeesPerShipment}}</td>
            <td>{{totalPriceWithoutVatPerShipment}}</td>
            <td>{{vatAmountPerShipment}}</td>
            <td>{{totalPricePerShipment}}</td>
          </tr> {{/data.shipments}}
          <tr style="background-color: #555555;">
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td style="color: white;">{{data.totalShipmentsPrice}}</td>
            <td style="color: white;">{{data.totalWaitingDays}}</td>
            <td style="color: white;">{{data.totalWaitingCharge}}</td>
            <td style="color: white;">{{data.totalReturnCharge}}</td>
            <td style="color: white;">{{data.totalMultiDestination}}</td>
            <td style="color: white;">{{data.totalWeightingFine}}</td>
            <td style="color: white;">{{data.totalClearnessFees}}</td>
            <td style="color: white;">{{data.totalPriceWithoutVatPerShipment}}</td>
            <td style="color: white;">{{data.totalVatAmount}}</td>
            <td style="color: white;">{{data.grandTotal}}</td>
          </tr>
        </table>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const maxRowsCountToSetTablesInSinglePage = 2
      const firstPageRowsCount = 6;
      const otherPagesRowsCount = 13;
      const maxRowsCountBeforeSplitting = 10;

      const pageElement = createPageElement();
      const contentElement = createContentElement();

      const headerElement = document.getElementsByClassName("tables-list__header")[0];
      contentElement.appendChild(headerElement);

      const dateTableElement = document.getElementsByClassName("invoice-date-table")[0];
      contentElement.appendChild(dateTableElement);

      const soldToSellerTableElement = document.getElementsByClassName("sold-to-seller-table")[0];
      contentElement.appendChild(soldToSellerTableElement);

      const destinationTableElement = document.getElementsByClassName("from-to-table")[0];
      contentElement.appendChild(destinationTableElement);

      const orderNumberTableElement = document.getElementsByClassName("order-number-table")[0];
      contentElement.appendChild(orderNumberTableElement);

      const shipmentsTableElement = document.getElementsByClassName("shipments-table")[0];
      const itemsTableRows = shipmentsTableElement.querySelectorAll("tr"); //object
      const shipmentsTableRowsCount = itemsTableRows.length;
      const itemsTableHeader = itemsTableRows[0];
      const totalAmountTableElement = document.getElementsByClassName("total-amount-table")[0];
      const commentsTableElement =  document.getElementsByClassName("comments-table")[0];

      // *********************************************************** if all rows fit the a single page(first page only)
      if (shipmentsTableRowsCount <= maxRowsCountToSetTablesInSinglePage) {
        const table = createTableElement();
        for (let i = 0; i < shipmentsTableRowsCount; i++) {
          table.appendChild(itemsTableRows[i]);
        }
        const shipmentTableWrapper = createShipmentTableWrapperElement(table);
        contentElement.appendChild(shipmentTableWrapper);
        contentElement.appendChild(totalAmountTableElement);
        contentElement.appendChild(commentsTableElement);

        pageElement.appendChild(contentElement);
        document.body.appendChild(pageElement);

        // export with summary
        if ({{ data.exportWithSummary }}){ drawSummaryTable(); }
      }
      else {
      const requiredPagesNumToDrawShipmentsTable = Math.ceil(Math.abs(shipmentsTableRowsCount - firstPageRowsCount) / otherPagesRowsCount) || 1;
      // *********************************************************** for first page
      const tableInFirstPage = createTableElement();
      tableInFirstPage.appendChild(itemsTableHeader);

      let rowFirstIndex = 0; // because the index of 0 is the header and it's already inserted in the above step
      let rowLastIndex = firstPageRowsCount - 1;

      if (shipmentsTableRowsCount <= rowLastIndex) {
        rowLastIndex = shipmentsTableRowsCount - 1;
      }

      for (let i = rowFirstIndex; i <= rowLastIndex; i++) {
        tableInFirstPage.appendChild(itemsTableRows[i]);
      }

      const shipmentTableWrapper = createShipmentTableWrapperElement(tableInFirstPage);
      contentElement.appendChild(shipmentTableWrapper);
      pageElement.appendChild(contentElement);
      document.body.appendChild(pageElement);

      let currentRowIndex;

      // *********************************************************** for other pages
      for (let pageIndex = 1; pageIndex <= requiredPagesNumToDrawShipmentsTable; pageIndex++) {
            if ((rowLastIndex === shipmentsTableRowsCount || firstPageRowsCount >= shipmentsTableRowsCount) && pageIndex === 1) {
              // all table drawn in the previous page and we just need
              // to create a new page for the total amount and comments table
              const pageElement = createPageElement();
              const contentElement = createContentElement();

              contentElement.appendChild(totalAmountTableElement);
              contentElement.appendChild(commentsTableElement);
              pageElement.appendChild(contentElement);
              document.body.appendChild(pageElement);
            } else {

              rowFirstIndex = rowLastIndex + 1;
              rowLastIndex = rowLastIndex + otherPagesRowsCount; // to move the last so the first will be moved

              if (shipmentsTableRowsCount <= rowLastIndex) {
                rowLastIndex = shipmentsTableRowsCount - 1;
              }

              const pageElement = createPageElement();
              const contentElement = createContentElement();
              const table = createTableElement();

              const cloneHeader = itemsTableHeader.cloneNode(true);
              table.appendChild(cloneHeader);

              for (currentRowIndex = rowFirstIndex; currentRowIndex <= rowLastIndex; currentRowIndex++) {
                table.appendChild(itemsTableRows[currentRowIndex]);
              }

              const shipmentTableWrapper = createShipmentTableWrapperElement(table);
              contentElement.appendChild(shipmentTableWrapper);

              if (pageIndex == requiredPagesNumToDrawShipmentsTable) {
                if ((rowLastIndex - rowFirstIndex) >= 0 && (rowLastIndex - rowFirstIndex) < maxRowsCountBeforeSplitting) {
                  contentElement.appendChild(totalAmountTableElement);
                  contentElement.appendChild(commentsTableElement);
                  pageElement.appendChild(contentElement);
                  document.body.appendChild(pageElement);
                } else {
                  // will set the previous page that contains the remaining rows of shipments table
                  pageElement.appendChild(contentElement);
                  document.body.appendChild(pageElement);

                  // then create a new page for the total amount and comments table
                  const newPageElement = createPageElement();
                  const newContentElement = createContentElement();

                  newContentElement.appendChild(totalAmountTableElement);
                  newContentElement.appendChild(commentsTableElement);
                  newPageElement.appendChild(newContentElement);
                  document.body.appendChild(newPageElement);
                }
                // export with summary
                if ({{ data.exportWithSummary }}) { drawSummaryTable(); }

              } else {
                pageElement.appendChild(contentElement);
                document.body.appendChild(pageElement);
              }
          }
        }
      }

    // *************************************************************
    const wrapper = document.getElementsByClassName("tables-list")[0];
    wrapper.parentNode.removeChild(wrapper);

    // ******************************* basic page methods
    function createPageElement() {
      const element = document.createElement("div");
      element.setAttribute("class", "page");
      return element;
    }

    function createContentElement() {
      const element = document.createElement("div");
      element.setAttribute("class", "content");
      return element;
    }

    function createTableElement() {
      const element = document.createElement("table");
      element.style.width = "100%";
      return element;
    }

    function createShipmentTableWrapperElement(table) {
      const element = document.createElement("div");
      element.setAttribute("class", "shipments-table");
      element.appendChild(table);
      return element;
    }

    // ******************************** summary page method
    function drawSummaryTable() {
      const firstPageRowsCount = 17;
      const maxRowsCountPerPage = 17;

      const summaryTableElement =
        document.getElementsByClassName("summary-table")[0];
      const summaryTableRows = summaryTableElement.querySelectorAll("tr"); //object
      const summaryTableRowsCount = summaryTableRows.length;
      const summaryTableHeader = summaryTableRows[0];

      const requiredPagesNumToDrawShipmentsTable = Math.ceil(Math.abs(summaryTableRowsCount) / maxRowsCountPerPage) || 1;
      let currentRowIndex;
      let rowFirstIndex = 1; // because the index of 0 is the header and it's already inserted in the above step
      let rowLastIndex = maxRowsCountPerPage - 1;
      if (summaryTableRowsCount <= rowLastIndex) {
        rowLastIndex = summaryTableRowsCount - 1;
      }

      // *********************************************************** for other pages
      for (let pageIndex = 1; pageIndex <= requiredPagesNumToDrawShipmentsTable; pageIndex++) {

        const newPage = document.createElement("div");
        newPage.setAttribute("class", "summary-page");

        const table = document.createElement("table");

        const cloneHeader = summaryTableHeader.cloneNode(true);
        table.appendChild(cloneHeader);

        for (currentRowIndex = rowFirstIndex; currentRowIndex <= rowLastIndex; currentRowIndex++) {
          console.log(currentRowIndex);
          table.appendChild(summaryTableRows[currentRowIndex]);
        }

        if ((rowLastIndex - rowFirstIndex) >= 1 && (rowLastIndex - rowFirstIndex) <= 3) {
          table.style.left = "-80mm";
          table.style.top = "120mm";
        } else if ((rowLastIndex - rowFirstIndex) >= 4 && (rowLastIndex - rowFirstIndex) <= 6) {
          table.style.left = "-80mm";
          table.style.top = "120mm";
        } else if ((rowLastIndex - rowFirstIndex) >= 7 && (rowLastIndex - rowFirstIndex) <= 9) {
          table.style.left = "-50mm";
          table.style.top = "110mm";
        } else if ((rowLastIndex - rowFirstIndex) >= 10 && (rowLastIndex - rowFirstIndex) <= 14) {
          table.style.left = "-50mm";
          table.style.top = "90mm";
        } else {
          table.style.left = "-24mm";
          table.style.top = "60mm";
        }

        const summaryTableWrapper = document.createElement("div");
        summaryTableWrapper.setAttribute("class", "summary-table");
        summaryTableWrapper.appendChild(table);

        newPage.appendChild(summaryTableWrapper);
        document.body.appendChild(newPage);

        rowFirstIndex = rowLastIndex + 1;
        rowLastIndex = rowLastIndex + maxRowsCountPerPage; // to move the last so the first will be moved

        if (summaryTableRowsCount <= rowLastIndex) {
          rowLastIndex = summaryTableRowsCount - 1;
        }
      }
    }
    });
  </script>
</body>

</html>
